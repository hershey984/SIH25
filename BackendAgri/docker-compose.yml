version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chatbot_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot_network

  # FastAPI Application
  chatbot-backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://chatbot_user:chatbot_password@postgres:5432/chatbot_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    depends_on:
      - postgres
      - redis
    networks:
      - chatbot_network
    volumes:
      - ./app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Redis Commander (optional - for Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - chatbot_network

volumes:
  postgres_data:
  redis_data:

networks:
  chatbot_network:
    driver: bridge